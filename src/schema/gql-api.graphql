type User {
  id: ID!
  first_name: String!
  last_name: String!
  username: String!
  password: String!
  email: String!
  cellNumber: String
  profile_pic_main: String
  cover_pic_main: String
  profile_pic: [Image]
  cover_pic: [Image]
  date_of_birth: String
  gender: String
  content: String
  agent_location: Location
  gallery: [Gallery]
  social_profile: Social
  reviews_maked: [ReviewFields]
  listed_posts: [Hotel]
  favourite_post: [Hotel]
  reviewed_post: [Hotel]
  createdAt: String!
  updatedAt: String!
}

# enum Gender {
#   Male
#   Female
#   Other
# }
type Hotel {
  id: ID!
  peopleLiked: [User]
  peopleReviewed: [User]
  connectId: User
  agentId: String
  agentEmail: String 
  agentName: String
  title: String
  slug: String
  status: String
  content: String
  price: String
  isNegotiable: Boolean
  propertyType: String
  condition: String
  rating: Float
  ratingCount: Int
  contactNumber: String
  termsAndCondition: String
  amenities: [Amenities]
  image: Image
  location: [Location]
  gallery: [Gallery]
  categories: [Categories]
  reviews: [Reviews]
  createdAt: String!
  updatedAt: String!
}

type Reviews {
  reviewID: ID!
  reviewTitle: String
  reviewText: String
  reviewTips: String
  sortOfTrip: String
  reviewAuthorId: User
  reviewAuthorFirstName: String
  reviewAuthorLastName: String
  reviewAuthorEmail: String
  reviewOverall: Float
  reviewAuthorPic: String
  reviewedHotel: Hotel
  # Có thể ko cần cái này
  reviewedHotelId: ID
  reviewPics: [Image]
  reviewDate: String
  reviewOptional: [ReviewOptionals]
  reviewFields: [ReviewFields]
}

type ReviewOptionals {
  id: ID!
  option: String
  optionField: String
}
type ReviewFields {
  id: ID!
  rating: Int
  ratingFieldName: String
}
type Amenities {
  id: ID!
  guestRoom: Int
  bedRoom: Int
  wifiAvailability: Boolean
  parkingAvailability: Boolean
  poolAvailability: Boolean
  airCondition: Boolean
  extraBedFacility: Boolean
}

type Image {
  id: ID!
  url: String
  thumb_url: String
}
type Gallery {
  id: ID!
  uid: String
  url: String
  signedRequest: String
}

type Location {
  id: ID!
  lat: Float
  lng: Float
  formattedAddress: String
  zipcode: String
  city: String
  state_long: String
  state_short: String
  country_long: String
  country_short: String
}

type Categories {
  id: ID!
  slug: String
  name: String
  image: Image
}
type AuthPayload {
  id: ID
  email: String
  first_name: String
  last_name: String
  profile_pic_main: String
  cover_pic_main: String
}
type HotelPhotos {
  url: String!
}
type Social {
  facebook: String
  twitter: String
  linkedIn: String
  instagram: String
}
type Query {
  allAmenities: [Amenities!]!
  imageId(id: ID!): Hotel!
  locationId(id: ID!): Location!
  locations: [Location]
  galleryId(id: ID!): Gallery!
  galleries: [Gallery!]!
  categoryId(id: ID!): Categories!
  allCategories: [Categories!]!
  userPosts(id: ID!): User
  favouritePosts(id: ID!): User
  favouritePostsHeart(id: ID!): User
  getUserInfo(id: ID!): User
  getUserGallery(id: ID!): User
  getHotelInfo(id: ID!): Hotel
  getHotelReviews(id: ID!): Hotel
  getUserReviews(id: ID!): User
}
type Mutation {
  signup(signUpInput: SignUpInput): AuthPayload!
  login(loginInput: LoginInput): AuthPayload
  createHotel(
    addHotelInput: AddHotelInput
    location: [LocationInput]
    image: [ImageInput]
    categories: [CategoriesInput]
  ): Hotel!
  createLocation(location: LocationInput): Location!
  updateProfile(
    profile: UpdateProfileInput
    location: LocationInput
    social: SocialInput
  ): User
  updatePhotos(photos: [UpdatePhotosInput]): User
  deletePhotos(photos: [DeletePhotosInput]): User
  setProfilePic(url: String): User
  setCoverPic(url: String): User
  updatePassword(password: UpdatePassword): User!
  forgetPassword(email: String): User
  sendContact(contact: ContactInput): User
  likeHotel(id: ID!): Hotel
  dislikeHotel(id: ID!): Hotel
  makeReviews(reviews: ReviewInput, hotelId: ID): Hotel
  mockData(mock: MockInput): User
}
input ReviewInput {
  reviewOverall: Float
  reviewTitle: String
  reviewTips: String
  reviewText: String
  sortOfTrip: String
  reviewFieldInput: [ReviewFieldInput]
  reviewOptionals: [ReviewOptionalsInput]
  reviewPics: [ImageInput]
}
input ReviewFieldInput {
  rating: Int
  ratingFieldName: String
}
input ReviewOptionalsInput {
  option: String
  optionField: String
}
input UpdateProfileInput {
  first_name: String
  last_name: String
  date_of_birth: String
  gender: String
  email: String
  content: String
  agent_location: LocationInput
  cellNumber: String
}

input UpdatePhotosInput {
  url: String
  uid: String
  signedRequest: String
}
input DeletePhotosInput {
  id: ID!
}

input UpdatePassword {
  confirmPassword: String!
  oldPassword: String!
  newPassword: String!
}
input SocialInput {
  facebook: String
  instagram: String
  twitter: String
}
input LocationInput {
  lat: Float
  lng: Float
  formattedAddress: String
  zipcode: String
  city: String
  state_long: String
  state_short: String
  country_long: String
  country_short: String
}
input ImageInput {
  url: String
}
input CategoriesInput {
  slug: String
  name: String
  image: ImageInput
}
input AddHotelInput {
  hotelName: String
  pricePerNight: String
  hotelDetails: String
  guest: Int
  beds: Int
  price: Int
  # Co the khong can nhung nen ghi vo cho de hieu
  hotelPhotos: [ImageInput]
  location: [LocationInput]
  locationDescription: String
  contactNumber: String
  wifiAvailability: Boolean
  airCondition: Boolean
  parking: Boolean
  poolAvailability: Boolean
  extraBed: Boolean
}
input SignUpInput {
  username: String
  first_name: String
  last_name: String
  email: String!
  password: String!
  profile_pic_main: String
  cover_pic_main: String
}

input LoginInput {
  email: String!
  password: String!
}

input ContactInput {
  subject: String!
  message: String
  email: String
  cellNumber: String
}
input MockInput {
  title: [String]
}
# Realtime
type Query {
  noop: Boolean
}

type Mutation {
  ping: Ping
}

type Subscription {
  pong: Pong
  notification(channelId: String): Message
}
type Message {
  # Có thể cho user nếu muốn routing nữa
  reviewAuthorName: String
  reviewAuthorId: String
  reviewedHotelId: Hotel
  reviewedHotelName: String
  hotelManagerId: String
  reviewTitle: String
  reviewText: String
  peopleReviewedArr: [User]
}
type Ping {
  id: ID
}

type Pong {
  pingId: ID
}
